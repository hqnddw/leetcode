//
// Created by hqnddw on 2020/9/7.
//

/**
 * 1. 拓扑排序
 *
 * 1.1 无向图
 *     使用拓扑排序可以判断一个无向图中是否存在环，具体步骤如下：
 *       1. 求出图中所有结点的度。
 *       2. 将所有度 <= 1 的结点入队。（独立结点的度为 0）
 *       3. 当队列不空时，弹出队首元素，把与队首元素相邻节点的度减一。如果相邻节点的度变为一，则将相邻结点入队
 *       4. 循环结束时判断已经访问的结点数是否等于 n。等于 n 说明全部结点都被访问过，无环；反之，则有环
 * 1.2 有向图
 *     使用拓扑排序判断无向图和有向图中是否存在环的区别在于：
 *       1. 在判断无向图中是否存在环时，求的是结点的度
 *       2. 在判断有向图中是否存在环时，求的是结点的入度
 *
 *
 * 2. DFS
 *      使用 DFS 可以判断一个无向图和有向中是否存在环。
 *      深度优先遍历图，如果在遍历的过程中，发现某个结点有一条边指向已访问过的结点，
 *      并且这个已访问过的结点不是上一步访问的结点，则表示存在环。
 *
 *      我们不能仅仅使用一个 bool 数组来表示结点是否访问过。规定每个结点都拥有三种状态，白、灰、黑。
 *      开始时所有结点都是白色，当访问过某个结点后，该结点变为灰色，当该结点的所有邻接点都访问完，该节点变为黑色
 *
 *      那么我们的算法可以表示为：如果在遍历的过程中，发现某个结点有一条边指向灰色节点，
 *      且这个灰色结点不是上一步访问的结点，那么存在环
 * */